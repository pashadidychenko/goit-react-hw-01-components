{"version":3,"sources":["css/friend.module.css","css/statistics.module.css","Profile.js","Statistics.js","FriendlistItem.js","Friendlist.js","Transaction.js","App.js","serviceWorker.js","index.js","css/profile.module.css"],"names":["module","exports","Profile","name","avatar","tag","location","stats","className","styles","profile","description","src","alt","list","quantity","followers","views","likes","randomColor","require","Statistics","title","statistics","map","el","item","key","id","style","backgroundColor","label","percentage","FriendListItem","friends","friend","status","isOnline","statusGreen","statusRed","width","FriendList","friendList","StyledTableCell","withStyles","theme","head","textTransform","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","table","maxWidth","TransactionHistory","items","classes","TableContainer","component","Paper","Table","aria-label","TableHead","align","TableBody","scope","type","amount","currency","App","user","statisticalData","Transaction","transactions","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0bff6dc0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"friend_friendList__1DlHb\",\"item\":\"friend_item__2Dw2T\",\"name\":\"friend_name__LXQaV\",\"avatar\":\"friend_avatar__3f4kC\",\"statusRed\":\"friend_statusRed__3TOw9\",\"statusGreen\":\"friend_statusGreen__3CAqH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__8HuVv\",\"title\":\"statistics_title__Xsnbr\",\"list\":\"statistics_list__a7KEb\",\"item\":\"statistics_item__pM7FH\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./css/profile.module.css\";\r\n\r\nfunction Profile({ name, avatar, tag, location, stats }) {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\r\n        <p className={styles.name}>{name}</p>\r\n        <p>@{tag}</p>\r\n        <p>{location}</p>\r\n      </div>\r\n      <ul className={styles.stats}>\r\n        <li className={styles.list}>\r\n          <span>Followers</span>\r\n          <br></br>\r\n          <span className={styles.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li className={styles.list}>\r\n          <span>Views</span>\r\n          <br></br>\r\n          <span className={styles.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li className={styles.list}>\r\n          <span>Likes</span>\r\n          <br></br>\r\n          <span className={styles.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number,\r\n    views: PropTypes.number,\r\n    likes: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport styles from \"./css/statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nvar randomColor = require(\"randomcolor\");\r\n\r\nfunction Statistics({ title = \"\", stats }) {\r\n  return (\r\n    <div className={styles.statistics}>\r\n      {title ? <h2 className={styles.title}>{title}</h2> : null}\r\n      <ul className={styles.list}>\r\n        {stats.map((el) => (\r\n          <li\r\n            className={styles.item}\r\n            key={el.id}\r\n            style={{ backgroundColor: `${randomColor()}` }}\r\n          >\r\n            <span>{el.label}</span>\r\n            <br></br>\r\n            <span>{el.percentage}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport styles from \"./css/friend.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction FriendListItem({ friends }) {\r\n  return friends.map((friend) => {\r\n    let status =\r\n      friend.isOnline === true ? styles.statusGreen : styles.statusRed;\r\n    return (\r\n      <li className={styles.item} key={friend.id}>\r\n        <span className={status}></span>\r\n        <img\r\n          className={styles.avatar}\r\n          src={friend.avatar}\r\n          alt={friend.name}\r\n          width=\"100\"\r\n        />\r\n        <p className={styles.name}>{friend.name}</p>\r\n      </li>\r\n    );\r\n  });\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport styles from \"./css/friend.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport FriendListItem from \"./FriendlistItem.js\";\r\n\r\nfunction FriendList({ friends }) {\r\n  return (\r\n    <ul className={styles.friendList}>\r\n      <FriendListItem friends={friends} />\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  withStyles,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    textTransform: \"uppercase\",\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    textTransform: \"capitalize\",\r\n    maxWidth: 400,\r\n  },\r\n});\r\n\r\nfunction TransactionHistory({ items }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"center\">Type</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Amount</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Currency</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {items.map((item) => (\r\n            <StyledTableRow key={item.id}>\r\n              <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                {item.type}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"center\">{item.amount}</StyledTableCell>\r\n              <StyledTableCell align=\"center\">{item.currency}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React, { Fragment } from \"react\";\r\n// Task 1\r\nimport user from \"./data/user.json\";\r\nimport Profile from \"./Profile.js\";\r\n// Task 2\r\nimport statisticalData from \"./data/statistical-data.json\";\r\nimport Statistics from \"./Statistics.js\";\r\n// Task 3\r\nimport friends from \"./data/friends.json\";\r\nimport FriendList from \"./Friendlist.js\";\r\n// Task 4\r\nimport transactions from \"./data/transactions.json\";\r\nimport TransactionHistory from \"./Transaction.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Fragment>\r\n      <h2>Task 1</h2>\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n      <h2>Task 2</h2>\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      <h2>Task 3</h2>\r\n      <FriendList friends={friends} />\r\n      <h2>Task 4</h2>\r\n      <TransactionHistory items={transactions} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__-89WL\",\"stats\":\"profile_stats__3ncPg\",\"description\":\"profile_description__24t1D\",\"avatar\":\"profile_avatar__aTut1\",\"name\":\"profile_name__1HQMb\",\"quantity\":\"profile_quantity__27uNx\",\"list\":\"profile_list__HOCPN\"};"],"sourceRoot":""}